version: '3.8'

services:
  supportbot:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - SUPPORT_BOT_TOKEN=${SUPPORT_BOT_TOKEN}
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/supportbot
      - MAX_CONNECTIONS=20
      - POOL_TIMEOUT=30
      - ENVIRONMENT=development
      - RAILWAY_PUBLIC_DOMAIN=${RAILWAY_PUBLIC_DOMAIN:-localhost}
      - WEBAPP_SERVICE_URL=http://webapp:3000
    depends_on:
      - db
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - support_network

  webapp:
    build: ../webapp-support-bot
    ports:
      - "3000:3000"
    volumes:
      - ../webapp-support-bot:/app
      - /app/node_modules
    environment:
      - PORT=3000
      - API_URL=http://supportbot:8000
      - NODE_ENV=development
      - CORS_ENABLED=true
    depends_on:
      - supportbot
    networks:
      - support_network

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=supportbot
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - support_network

volumes:
  postgres_data:

networks:
  support_network:
    driver: bridge 